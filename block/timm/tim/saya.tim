Saya
==== 

Synopsis
--------

  saya(array [,label,stream,sep,before,after,eq])

Description
-----------

Array printing function. Contents printed, sorted on key.

Arguments
---------

+ array   : An array.
+ label   : (OPTIONAL) A prefix before every item.
+ stream  : (OPTIONAL) Where to print the output; defaults to standard output.
+ sep     : (OPTIONAL) A string to print between each item. Defaults to new line.
+ before  : (OPTIONAL) A string to print before the array. Defaults to "".
+ after   : (OPTIONAL) A string to print after the array. Defaults to new line.
+ eq      : (OPTIONAL) A string to print between each key/value pair. Defaults to " = ".

Returns
-------

Size of the array

Side effects
------------

Pretty prints the array.

Notes
-----

The most common usage is to just use the first two arguments; e.g.

  saya(a,"name") 
  ==>    
  name[1] = tim
  name[2] = menzies

Code
----

 function saya(a,s,     file, sep0,b4,after,eq,   \
              b,comma,m,n,key,val,i,j,tmp,sep) {
	file  = file  ? file  : "/dev/stdout"
	sep0  = sep0  ? sep0  : "\n"
	b4    = b4    ? b4    : ""
	after = after ? after : "\n"
	eq    = eq    ? eq    : " = "
	pre   = s     ? s"["  : ""
	post  = s     ? "]"   : ""
	m     = asorti(a,b)
	printf("%s",b4)>>file
	for(i=1;i<=m;i++)  {
		key=b[i]
		val=a[b[i]]
		printf("%s", sep pre  )>>file
		n=split(key,tmp,SUBSEP)
		comma = ""
		for(j=1;j<=n;j++)	{	
			printf("%s", c tmp[j]  )>>file
			comma = ","
		}
		printf("%s", post eq val )>>file
		sep=sep0;
	};
	printf("%s",after)>>file
	return m
 }

Author
------

Tim Menzies
